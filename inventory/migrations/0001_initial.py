# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-12-27 18:19
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import inventory.models.validation


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.GenericIPAddressField(unique=True)),
                ('prefix', models.IntegerField(default=24)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'permissions': (('view_address', 'Can view address'),),
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(3), inventory.models.validation.validate_special_characters])),
                ('description', models.CharField(max_length=255)),
                ('usage', models.CharField(choices=[(b'BACKBONE', b'BACKBONE'), (b'ACCESS', b'ACCESS'), (b'TSP', b'TSP')], max_length=255)),
                ('function', models.CharField(choices=[(b'ROUTER', b'ROUTER'), (b'L3_SWITCH', b'L3_SWITCH'), (b'L2_SWITCH', b'L2_SWITCH')], max_length=255)),
                ('serial_number', models.CharField(max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(4), inventory.models.validation.validate_special_characters])),
                ('inventory_number', models.BigIntegerField(unique=True)),
                ('mac', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.MinLengthValidator(4), inventory.models.validation.validate_mac])),
                ('manage', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'permissions': (('view_device', 'Can view device'),),
            },
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('vendor', models.CharField(choices=[(b'cisco', b'cisco'), (b'juniper', b'juniper'), (b'lancom', b'lancom')], max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('os', models.CharField(choices=[(b'ios', b'ios'), (b'junos', b'junos')], max_length=255)),
                ('version', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[(b'router', b'router'), (b'switch', b'switch'), (b'access point', b'access point')], max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'permissions': (('view_devicemodel', 'Can view device model'),),
            },
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, validators=[django.core.validators.MinLengthValidator(2)])),
                ('description', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[(b'ethernetCsmacd', b'ethernetCsmacd'), (b'l3ipvlan', b'l3ipvlan'), (b'propVirtual', b'propVirtual'), (b'l2vlan', b'l2vlan'), (b'softwareLoopback', b'softwareLoopback'), (b'tunnel', b'tunnel'), (b'ppp', b'ppp'), (b'ieee8023adLag', b'ieee8023adLag'), (b'other', b'other')], max_length=255)),
                ('state', models.BooleanField(default=True)),
                ('uplink', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('addresses', models.ManyToManyField(blank=True, to='inventory.Address')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Device')),
            ],
            options={
                'permissions': (('view_interface', 'Can view interface'),),
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interface1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interface1', to='inventory.Interface')),
                ('interface2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interface2', to='inventory.Interface')),
            ],
            options={
                'permissions': (('view_link', 'Can view link'),),
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('vlan', models.IntegerField(blank=True, null=True)),
                ('usage', models.CharField(choices=[(b'management', b'management'), (b'infrastructure', b'infrastructure'), (b'lan', b'lan')], max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.Tenant')),
            ],
            options={
                'permissions': (('view_network', 'Can view network'),),
            },
        ),
        migrations.CreateModel(
            name='Vlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interface', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventory.Interface', validators=[inventory.models.validation.validate_interface_type])),
                ('tagged_networks', models.ManyToManyField(blank=True, related_name='tagged_networks', to='inventory.Network')),
                ('untagged_network', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='untagged_network', to='inventory.Network')),
            ],
            options={
                'permissions': (('view_vlan', 'Can view vlan'),),
            },
        ),
        migrations.AddField(
            model_name='device',
            name='device_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.DeviceModel'),
        ),
        migrations.AddField(
            model_name='device',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tenants.Tenant'),
        ),
        migrations.AddField(
            model_name='address',
            name='network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.Network'),
        ),
        migrations.AlterUniqueTogether(
            name='link',
            unique_together=set([('interface1', 'interface2')]),
        ),
        migrations.AlterUniqueTogether(
            name='interface',
            unique_together=set([('name', 'device')]),
        ),
        migrations.AlterUniqueTogether(
            name='address',
            unique_together=set([('address', 'prefix')]),
        ),
    ]
